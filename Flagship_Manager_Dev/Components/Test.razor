@page "/test"
@using System.Timers
@using FlagShip_Manager.Objects
@using FlagShip_Manager
@using FlagShip_Manager.Helpers
@using Flagship_Manager_Dev.Components
@using Microsoft.JSInterop;
@inject IJSRuntime JS

@*
    Test page for trying out new UI ideas.
*@

<style>
    .div1{
        width:300px;
        height:0px;
        position:relative; 
        
        background:black;
        overflow:clip;
        transition-duration: 1s;
        transition-property: all;
        transition-timing-function:linear;
    }
    .div2{
        width: 300px;
        height: 30px;
        background: blue;
    }

    .div3 {
        width: 300px;
        height: 5px;
        max-height: 35px;
        background: black;
    }

    .button {
        position:relative;
        display: block;
        z-index: 500;
        width: 300px;
        height: 5px;
        max-height: 35px;
        background: grey;
    }

</style>

@foreach(int i in test)
{
    string ID = i + "bob";
    <div class="div2">
        <label id="@ID">The number is @i</label>
    </div>
    <div class="div3"></div>
}
<button @onclick="() => InvertList()"></button>



@code 
{
    int[] test = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };

    private async void InvertList()
    {
        Array.Reverse(test);
        await InvokeAsync(() => StateHasChanged());
    }
}


